// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  email        String        @unique
  firstname    String
  lastname     String
  user_role    Int           @default(3)
  avatar       String?
  is_active    Boolean       @default(true)
  createdAt    DateTime      @default(now())
  transactions Transaction[]
  logs         Log[]
}

model Transaction {
  id               Int      @id @default(autoincrement())
  userId           Int
  brandId          Int
  productId        Int
  quantity         Int
  price            Decimal  @db.Decimal(10, 2)
  price_total      Decimal  @db.Decimal(10, 2)
  transaction_type Int
  createdAt        DateTime @default(now())
  user             User     @relation(fields: [userId], references: [id])
  brand            Brand    @relation(fields: [brandId], references: [id])
  product          Product  @relation(fields: [productId], references: [id])
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  price        Decimal       @db.Decimal(10, 2)
  stock        Int
  brandId      Int
  categoryId   Int
  brand        Brand         @relation(fields: [brandId], references: [id])
  category     Category      @relation(fields: [categoryId], references: [id])
  transactions Transaction[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Brand {
  id           Int           @id @default(autoincrement())
  name         String
  image        String?
  products     Product[]
  transactions Transaction[]
}

model Log {
  id           Int      @id @default(autoincrement())
  activityType Int
  result       Int
  message      String
  userId       Int?
  createdAt    DateTime @default(now())
  user         User?    @relation(fields: [userId], references: [id])
}
